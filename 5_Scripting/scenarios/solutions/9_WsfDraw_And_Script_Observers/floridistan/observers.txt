# ****************************************************************************
# CUI
#
# The Advanced Framework for Simulation, Integration, and Modeling (AFSIM)
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# ****************************************************************************

# File generated by Wizard 2.8.0 on Feb 21, 2021.

script_variables
   Map<string, int> samHits = Map<string, int>();
end_script_variables

script void WeaponHit(WsfWeaponEngagement aWeaponEngagement, WsfPlatform aTargetPlatform)
   
   string name = aTargetPlatform.Name();
   if (samHits.Exists(name))
   {
      samHits[name] = samHits[name]+1;
   }
   else
   {
      samHits[name] = 1;
   }
end_script

// First Attempt overwrites the file
#script void SimulationComplete()
#   FileIO output = FileIO();
#   output.Open("output/hits.txt", "out");
#   foreach(string name : int hits in samHits)
#   {
#      output.Writeln(write_str(name, " was hit ", hits, " times"));
#   }
#   output.Close();
#end_script

// Second Attempt appends to the end of the file for each run
#script void SimulationComplete()
#   FileIO output = FileIO();
#   int runNum = WsfSimulation.RunNumber();
#   
#   if (runNum == 1)
#      output.Open("output/hits.txt", "out");
#   else
#      output.Open("output/hits.txt", "append");
#      
#   foreach(string name : int hits in samHits)
#   {
#      output.Writeln(write_str("In run ", runNum, ", ", name, " was hit ", hits, " time(s)"));
#   }
#   output.Close();
#end_script

// Third Attempt creates a new file for each run
script void SimulationComplete()
   FileIO output = FileIO();
   string runNum = (string)WsfSimulation.RunNumber();  // cast the Simulaiton run number integer to string
   
      output.Open("output/hits_"+runNum+".txt", "out");  // concatenate the run number into the filename
      
   foreach(string name : int hits in samHits)
   {
      output.Writeln(write_str("In run ", runNum, ", ", name, " was hit ", hits, " time(s)"));
   }
   output.Close();
end_script

observer
   enable WEAPON_HIT
   enable SIMULATION_COMPLETE
end_observer